queue:
  name: Hosted Linux Preview
  condition: succeeded()
variables:
    BuildConfiguration: release
steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '**/*.csproj'
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True
- task: Docker@0
  displayName: Build Web image
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryConnection: MyDockerHub
    dockerFile: 'SqlServerAutoTuningDashboard/Dockerfile-Web'
    defaultContext: false
    context: SqlServerAutoTuningDashboard
    imageName: 'sql-autotune-dashboard:$(Build.BuildId)'
    includeLatestTag: true
- task: Docker@0
  displayName: Push Web image
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryConnection: MyDockerHub
    action: 'Push an image'
    imageName: 'sql-autotune-dashboard:$(Build.BuildId)'
    includeLatestTag: true
- task: Docker@0
  displayName: Build Sql image
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryConnection: MyDockerHub
    dockerFile: 'SqlServerAutoTuningDashboard/Dockerfile-Sql'
    defaultContext: false
    context: SqlServerAutoTuningDashboard
    imageName: 'my-mssql-linux:$(Build.BuildId)'
    includeLatestTag: true
- task: Docker@0
  displayName: Push Sql image
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryConnection: MyDockerHub
    action: 'Push an image'
    imageName: 'my-mssql-linux:$(Build.BuildId)'
    includeLatestTag: true