queue:
  name: Hosted Linux Preview
  condition: succeeded()
variables:
    BuildConfiguration: release
steps:
- task: Docker@0
  displayName: Build Web image
  inputs:
    dockerFile: 'SqlServerAutoTuningDashboard/Dockerfile-Web'
    defaultContext: false
    context: SqlServerAutoTuningDashboard
    imageName: 'sql-autotune-dashboard:$(Build.BuildId)'
    includeLatestTag: true
    qualifyImageName: true
- task: Docker@0
  displayName: Push Web image
  inputs:
    action: 'Push an image'
    imageName: 'sql-autotune-dashboard:$(Build.BuildId)'
    includeLatestTag: true
    qualifyImageName: true
- task: Docker@0
  displayName: Build Sql image
  inputs:
    dockerFile: 'SqlServerAutoTuningDashboard/Dockerfile-Sql'
    defaultContext: false
    context: SqlServerAutoTuningDashboard
    imageName: 'my-mssql-linux:$(Build.BuildId)'
    includeLatestTag: true
    qualifyImageName: true
- task: Docker@0
  displayName: Push Sql image
  inputs:
    action: 'Push an image'
    imageName: 'my-mssql-linux:$(Build.BuildId)'
    includeLatestTag: true
    qualifyImageName: true
- task: HelmInstaller@0
  displayName: Install Helm 2.10.0
  inputs:
    helmVersion: 2.10.0
    checkLatestHelmVersion: true
- task: HelmDeploy@0
  displayName: helm init --client-only
  inputs:
    command: init
    upgradeTiller: false
    arguments: '--client-only'
- task: HelmDeploy@0
  displayName: helm package
  inputs:
    command: package
    chartPath: 'SqlServerAutoTuningDashboard/charts/autotuningdashboard'
    chartVersion: '$(Build.BuildId)'
    save: false
    destination: $(Build.ArtifactStagingDirectory)
- task: PublishBuildArtifacts@1
  displayName: Publish Artifact: helm-chart
  inputs:
    ArtifactName: 'helm-chart'
    PathtoPublish: $(Build.ArtifactStagingDirectory)
